{"version":3,"sources":["../../src/search.js"],"names":["isObject","obj","undefined","ScopeSearch","origin","validator","options","maxDepth","key","value","logErrors","logProgress","progressThreshold","results","timeouts","toLog","console","error","originObj","callback","depth","context","currentDepth","_visited","add","hasOwnProperty","has","__loopThrough","e","logError","WeakSet","data","res","counter","nbObjs","count","nextThreshold","info","_recursiveBrowsing","container","log","testValue","push","module","exports"],"mappings":"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","file":"search.js","sourcesContent":["function isObject(obj) {\n  //return Object.prototype.toString.call(obj) === \"[object Object]\" || Object.prototype.toString.call(obj) === \"[object Array]\";\n  return typeof(obj) === 'object' && obj !== null && obj !== undefined;\n}\n\n/**\n * @class ScopeSearch\n * class to search in javascript objects\n */\nclass ScopeSearch {\n  /**\n   * constructor of the ScopeSearch class.\n   * @constructor\n   * @param {Object} [origin={}] object to search through\n   * @param  {function} [validator= function(){return false}] condition that will validate whether or not the data looked at is a valid result\n   * @param  {Object} [options = {maxDepth:50, key:true, value: true, logErrors: false, logProgress:true, progressThreshold:0.25}] object specifying different options to our search\n   * @param {Number} [options.maxDepth=50] maximum depth the recursive search will go through.\n   * @param {Boolean} [options.key=true] check the keys of properties for matches against our validator\n   * @param {Boolean} [options.value=true] check the values of properties for matches against our validator\n   * @param {Boolean} [options.logErrors=false] log (console.error) error thrown by our validator function\n   * @param {Boolean} [options.logProgress=true] log progress percentage of our search (compared to total amount of properties to look at)\n   * @param {Number} [options.progressThreshold=0.25] threshold % to show for the progress logs (default logs for every 25% searched)\n   * @return {ScopeSearch}         instance created (this)\n   */\n  constructor(origin = {}, validator = function() {\n    return false;\n  }, options = {}) {\n    this.options = Object.assign({ maxDepth: 50, key: true, value: true, logErrors: false, logProgress: true, progressThreshold: 0.25 }, options);\n    this.validator = validator;\n    this.origin = origin;\n    this.results = [];\n    this.timeouts = [];\n    return this;\n  }\n  /**\n   * use console.log to log the passed parameter\n   * @param  {String} toLog message to print w/ console.error\n   */\n  logError(toLog) {\n    if (this.options.logErrors) {\n      console.error(toLog);\n    }\n  }\n  __loopThrough(originObj, callback, depth = 0, context = '') {\n    const currentDepth = depth + 1;\n    this._visited.add(originObj);\n    for (let key in originObj) {\n      try {\n        if (!callback(originObj, key, originObj[key], currentDepth, context) || (originObj.hasOwnProperty && !originObj.hasOwnProperty(key))) {\n          continue;\n        }\n\n        if (isObject(originObj[key]) && !this._visited.has(originObj[key])) {\n          this.__loopThrough(originObj[key], callback, currentDepth, `${context}['${key}']`);\n        }\n      } catch (e) {\n        this.logError(e);\n      }\n    }\n  }\n  _recursiveBrowsing(originObj, callback) {\n    this._visited = new WeakSet();\n    this.__loopThrough(originObj, callback);\n    this._visited = null;\n  }\n  /**\n   * check the specific data against the validator function\n   * @param  {String|Number|Function} data      value to call validator with\n   * @param  {Function} [validator=this.validator] validator to test the passed data with\n   * @return {Boolean}            whether or not the tested data matched the requireements of the validator\n   */\n  testValue(data, validator = this.validator) {\n    let res = false;\n    try {\n      res = validator(data);\n    } catch (e) {\n      this.logError(`${context}=>${e}`);\n    } finally {\n      return res;\n    }\n  }\n  /**\n   * search through given object for data that matches the validator\n   * @param  {Object} [origin=this.origin]    object to search through\n   * @param  {Function} [validator=this.validator]  condition that will validate whether or not the data looked at is a valid result (see {@link ScopeSearch#constructor})\n   * @param  {Object} [otions=this.options] object specifying different options to our search (see {@link ScopeSearch#constructor})\n   * @return {Array.Objects}           Array containing all matching results\n   */\n  search(origin = this.origin, validator = this.validator, options = {}) {\n    Object.assign(this.options, options);\n    this.results = [];\n    let counter = 0;\n    const nbObjs = this.options.logProgress && this.count(origin);\n    if (nbObjs) {\n      var nextThreshold = 0.25;\n      console.info(`Searching through ${nbObjs} ${(this.options.key ? \"keys and \" : \"\")}${(this.options.value? \"values\" : \"\")}`);\n    }\n    this._recursiveBrowsing(origin, (container, key, value, depth, context) => {\n      counter++;\n      if (this.options.logProgress && counter / nbObjs >= nextThreshold) {\n        console.log(`${((counter / nbObjs) * 100) | 0}% searched...`);\n        nextThreshold += this.options.progressThreshold;\n      }\n      if (this.options.key && this.testValue(key, validator)) {\n        this.results.push({ data: key, context, container, key: true });\n      }\n      if (this.options.value && this.testValue(value, validator)) {\n        this.results.push({ data: value, context: `${context}['${key}']`, container, value: true });\n      }\n      return depth < this.options.maxDepth;\n    });\n    return this.results;\n  }\n  /**\n   * Counts the number of non-object properties inside of a javascript object\n   * @param  {Object} [origin=this.origin]    object which will be searched through and the number of properties returned\n   * @return {Number}        Number of (non-object) properties which inside the origin and all its inner objects\n   */\n  count(origin=this.origin) {\n    let res = 0;\n    this._recursiveBrowsing(origin, (container, key, value, depth, context) => {\n      res++;\n      return depth < this.options.maxDepth;\n    });\n    return res;\n  }\n}\n\n\ntry {\n  module.exports = ScopeSearch;\n} catch (e) {\n  console.log('cannot export module');\n}\n"]}